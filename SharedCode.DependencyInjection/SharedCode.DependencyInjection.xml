<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharedCode.DependencyInjection</name>
    </assembly>
    <members>
        <member name="T:SharedCode.DependencyInjection.DependencyLoader">
            <summary>
            The dependency loader class.
            </summary>
        </member>
        <member name="M:SharedCode.DependencyInjection.DependencyLoader.LoadDependencies(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String)">
            <summary>
            Loads the dependencies.
            </summary>
            <param name="serviceCollection">The service collection.</param>
            <param name="path">The path.</param>
            <param name="pattern">The pattern.</param>
            <exception cref="T:System.TypeLoadException"></exception>
        </member>
        <member name="T:SharedCode.DependencyInjection.DependencyRegister">
            <summary>
            The dependency register class. Implements the <see cref="T:SharedCode.DependencyInjection.IDependencyRegister" />.
            </summary>
            <seealso cref="T:SharedCode.DependencyInjection.IDependencyRegister" />
        </member>
        <member name="F:SharedCode.DependencyInjection.DependencyRegister.serviceCollection">
            <summary>
            The service collection
            </summary>
        </member>
        <member name="M:SharedCode.DependencyInjection.DependencyRegister.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SharedCode.DependencyInjection.DependencyRegister" /> class.
            </summary>
            <param name="serviceCollection">The service collection.</param>
        </member>
        <member name="M:SharedCode.DependencyInjection.DependencyRegister.SharedCode#DependencyInjection#IDependencyRegister#AddScoped``1">
            <inheritdoc />
        </member>
        <member name="M:SharedCode.DependencyInjection.DependencyRegister.SharedCode#DependencyInjection#IDependencyRegister#AddScoped``2">
            <inheritdoc />
        </member>
        <member name="M:SharedCode.DependencyInjection.DependencyRegister.SharedCode#DependencyInjection#IDependencyRegister#AddScopedForMultiImplementation``2">
            <inheritdoc />
        </member>
        <member name="M:SharedCode.DependencyInjection.DependencyRegister.SharedCode#DependencyInjection#IDependencyRegister#AddSingleton``1">
            <inheritdoc />
        </member>
        <member name="M:SharedCode.DependencyInjection.DependencyRegister.SharedCode#DependencyInjection#IDependencyRegister#AddSingleton``2">
            <inheritdoc />
        </member>
        <member name="M:SharedCode.DependencyInjection.DependencyRegister.SharedCode#DependencyInjection#IDependencyRegister#AddTransient``1">
            <inheritdoc />
        </member>
        <member name="M:SharedCode.DependencyInjection.DependencyRegister.SharedCode#DependencyInjection#IDependencyRegister#AddTransient``2">
            <inheritdoc />
        </member>
        <member name="M:SharedCode.DependencyInjection.DependencyRegister.SharedCode#DependencyInjection#IDependencyRegister#AddTransientForMultiImplementation``2">
            <inheritdoc />
        </member>
        <member name="T:SharedCode.DependencyInjection.IDependencyRegister">
            <summary>
            The dependency register interface.
            </summary>
        </member>
        <member name="M:SharedCode.DependencyInjection.IDependencyRegister.AddScoped``1">
            <summary>
            Adds the scoped type.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
        </member>
        <member name="M:SharedCode.DependencyInjection.IDependencyRegister.AddScoped``2">
            <summary>
            Adds the scoped service and implementation.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <typeparam name="TImplementation">The type of the implementation.</typeparam>
        </member>
        <member name="M:SharedCode.DependencyInjection.IDependencyRegister.AddScopedForMultiImplementation``2">
            <summary>
            Adds the scoped service for multiple implementations.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <typeparam name="TImplementation">The type of the implementation.</typeparam>
        </member>
        <member name="M:SharedCode.DependencyInjection.IDependencyRegister.AddSingleton``1">
            <summary>
            Adds the singleton service.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
        </member>
        <member name="M:SharedCode.DependencyInjection.IDependencyRegister.AddSingleton``2">
            <summary>
            Adds the singleton service and implementation.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <typeparam name="TImplementation">The type of the implementation.</typeparam>
        </member>
        <member name="M:SharedCode.DependencyInjection.IDependencyRegister.AddTransient``1">
            <summary>
            Adds the transient service.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
        </member>
        <member name="M:SharedCode.DependencyInjection.IDependencyRegister.AddTransient``2">
            <summary>
            Adds the transient service.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <typeparam name="TImplementation">The type of the implementation.</typeparam>
        </member>
        <member name="M:SharedCode.DependencyInjection.IDependencyRegister.AddTransientForMultiImplementation``2">
            <summary>
            Adds the transient service for multiple implementations.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <typeparam name="TImplementation">The type of the implementation.</typeparam>
        </member>
        <member name="T:SharedCode.DependencyInjection.IDependencyResolver">
            <summary>
            The dependency resolver interface.
            </summary>
        </member>
        <member name="M:SharedCode.DependencyInjection.IDependencyResolver.SetUp(SharedCode.DependencyInjection.IDependencyRegister)">
            <summary>
            Sets up the dependency register.
            </summary>
            <param name="dependencyRegister">The dependency register.</param>
        </member>
        <member name="T:SharedCode.DependencyInjection.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SharedCode.DependencyInjection.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SharedCode.DependencyInjection.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
